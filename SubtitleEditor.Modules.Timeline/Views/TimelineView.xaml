<UserControl x:Class="SubtitleEditor.Modules.Timeline.Views.TimelineView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:prism="http://prismlibrary.com/"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             prism:ViewModelLocator.AutoWireViewModel="True">
    
    <!-- 使用 Grid 作為根容器，分為兩行：時間刻度和時間軸主體 -->
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="25"/>   <!-- 時間刻度行 -->
            <RowDefinition Height="*"/>    <!-- 時間軸主體行 -->
        </Grid.RowDefinitions>
        
        <!-- 第一行：時間刻度區域 -->
        <Grid Grid.Row="0" Background="#FF2D2D30">
            <!-- 時間刻度文字和刻度線 -->
            <Canvas Height="25" 
                    Width="{Binding TotalTimelineWidth}"
                    Background="Transparent"
                    ClipToBounds="True"
                    x:Name="TimeMarkerCanvas">
                
                <!-- 為時間刻度 Canvas 設定 RenderTransform 以支援動畫同步 -->
                <Canvas.RenderTransform>
                    <TranslateTransform x:Name="TimeMarkerTranslateTransform" X="0" />
                </Canvas.RenderTransform>
                    
                    <!-- 時間刻度線和文字 -->
                    <ItemsControl ItemsSource="{Binding TimeMarkers}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <Canvas />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        
                        <ItemsControl.ItemContainerStyle>
                            <Style TargetType="ContentPresenter">
                                <Setter Property="Canvas.Left" Value="{Binding Left}" />
                                <Setter Property="Canvas.Top" Value="0" />
                            </Style>
                        </ItemsControl.ItemContainerStyle>
                        
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Grid>
                                    <!-- 刻度線 -->
                                    <Rectangle Width="1" 
                                               Height="10"
                                               Fill="#FF9CDCFE"
                                               VerticalAlignment="Bottom"
                                               HorizontalAlignment="Center"/>
                                    
                                    <!-- 時間文字 -->
                                    <TextBlock Text="{Binding DisplayTime}"
                                               Foreground="#FF9CDCFE"
                                               FontSize="10"
                                               HorizontalAlignment="Center"
                                               VerticalAlignment="Top"
                                               Margin="0,2,0,0"/>
                                </Grid>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
            </Canvas>
        </Grid>
        
        <!-- 第二行：時間軸主體區域 -->
        <Grid Grid.Row="1" Background="Black" SizeChanged="TimelineContainer_SizeChanged">
            <!-- 使用 Canvas 替代 ScrollViewer，通過動畫控制位置 -->
            <Canvas x:Name="TimelineCanvas" 
                    Height="120" 
                  Width="{Binding TotalTimelineWidth}" 
                    Background="DarkSlateGray"
                    ClipToBounds="True">
                
                <!-- 為 Canvas 設定 RenderTransform 以支援動畫 -->
                <Canvas.RenderTransform>
                    <TranslateTransform x:Name="CanvasTranslateTransform" X="0" />
                </Canvas.RenderTransform>
                
                <!-- 第一層：波形線條 -->
                <Polyline Points="{Binding WaveformPoints}"
                          Stroke="LimeGreen"
                          StrokeThickness="1"
                          Fill="Transparent"
                          Panel.ZIndex="1" />
                
                <!-- 第一層：中心線 -->
                    <Line X1="0" Y1="35" 
                          X2="{Binding TotalTimelineWidth}" Y2="35"
                      Stroke="Gray"
                      StrokeThickness="1"
                      Opacity="0.5"
                      Panel.ZIndex="1" />
                
                <!-- 第二層：字幕區塊疊加在波形圖上方 -->
                <ItemsControl ItemsSource="{Binding SubtitleItems}"
                              Panel.ZIndex="2">
                    
                    <!-- 使用 Canvas 作為容器，支援絕對定位 -->
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <Canvas />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    
                    <!-- 字幕項目的容器樣式，設定位置和大小 -->
                    <ItemsControl.ItemContainerStyle>
                        <Style TargetType="ContentPresenter">
                            <!-- 綁定到 SubtitleTimelineItemViewModel 的 Left 屬性 -->
                            <Setter Property="Canvas.Left" Value="{Binding Left}" />
                            <!-- 垂直位置固定在底部區域 -->
                            <Setter Property="Canvas.Top" Value="70" />
                            <!-- 綁定到 SubtitleTimelineItemViewModel 的 Width 屬性 -->
                            <Setter Property="Width" Value="{Binding Width}" />
                        </Style>
                    </ItemsControl.ItemContainerStyle>
                    
                    <!-- 字幕項目的外觀模板 -->
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Border Height="40"
                                    BorderThickness="1" 
                                    CornerRadius="3">
                                
                                    <!-- 三欄式Grid結構：左拉伸把手 + 內容區域 + 右拉伸把手 -->
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="5"/>  <!-- 左拉伸把手 -->
                                            <ColumnDefinition Width="*"/>  <!-- 內容區域 -->
                                            <ColumnDefinition Width="5"/>  <!-- 右拉伸把手 -->
                                        </Grid.ColumnDefinitions>

                                        <!-- 左拉伸把手 -->
                                        <Border Grid.Column="0" 
                                                Background="Transparent"
                                                Cursor="SizeWE">
                                            <Border.Style>
                                                <Style TargetType="Border">
                                                    <Style.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="Background" Value="#40FFFFFF"/>
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Border.Style>
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="MouseLeftButtonDown">
                                                    <i:InvokeCommandAction Command="{Binding MouseDownCommand}"
                                                                         PassEventArgsToCommand="True" />
                                                </i:EventTrigger>
                                                <i:EventTrigger EventName="MouseMove">
                                                    <i:InvokeCommandAction Command="{Binding MouseMoveCommand}"
                                                                         PassEventArgsToCommand="True" />
                                                </i:EventTrigger>
                                                <i:EventTrigger EventName="MouseLeftButtonUp">
                                                    <i:InvokeCommandAction Command="{Binding MouseUpCommand}"
                                                                         PassEventArgsToCommand="True" />
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </Border>

                                        <!-- 內容區域 -->
                                        <Border Grid.Column="1" 
                                                Background="Transparent"
                                                Cursor="SizeAll">
                                <!-- 字幕文字 -->
                                <TextBlock Text="{Binding DisplayText}" 
                                           Foreground="White" 
                                           FontSize="9" 
                                           FontWeight="Medium"
                                           TextTrimming="CharacterEllipsis"
                                           VerticalAlignment="Center"
                                                       HorizontalAlignment="Center"
                                                       Margin="2"/>
                                            
                                            <i:Interaction.Triggers>
                                                <!-- 拖動相關事件 -->
                                                <i:EventTrigger EventName="MouseLeftButtonDown">
                                                    <i:InvokeCommandAction Command="{Binding MouseDownCommand}"
                                                                         PassEventArgsToCommand="True" />
                                                </i:EventTrigger>
                                                <i:EventTrigger EventName="MouseMove">
                                                    <i:InvokeCommandAction Command="{Binding MouseMoveCommand}"
                                                                         PassEventArgsToCommand="True" />
                                                </i:EventTrigger>
                                                <i:EventTrigger EventName="MouseLeftButtonUp">
                                                    <i:InvokeCommandAction Command="{Binding MouseUpCommand}"
                                                                         PassEventArgsToCommand="True" />
                                                </i:EventTrigger>
                                                
                                                <!-- 原有的選擇字幕事件（保留兼容性） -->
                                                <i:EventTrigger EventName="MouseLeftButtonDown">
                                                    <prism:InvokeCommandAction Command="{Binding DataContext.SelectSubtitleCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                                                             CommandParameter="{Binding}" />
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </Border>

                                        <!-- 右拉伸把手 -->
                                        <Border Grid.Column="2" 
                                                Background="Transparent"
                                                Cursor="SizeWE">
                                            <Border.Style>
                                                <Style TargetType="Border">
                                                    <Style.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="Background" Value="#40FFFFFF"/>
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Border.Style>
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="MouseLeftButtonDown">
                                                    <i:InvokeCommandAction Command="{Binding MouseDownCommand}"
                                                                         PassEventArgsToCommand="True" />
                                                </i:EventTrigger>
                                                <i:EventTrigger EventName="MouseMove">
                                                    <i:InvokeCommandAction Command="{Binding MouseMoveCommand}"
                                                                         PassEventArgsToCommand="True" />
                                                </i:EventTrigger>
                                                <i:EventTrigger EventName="MouseLeftButtonUp">
                                                    <i:InvokeCommandAction Command="{Binding MouseUpCommand}"
                                                                         PassEventArgsToCommand="True" />
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </Border>
                                    </Grid>
                                
                                <!-- 根據 IsActive 狀態設定樣式 -->
                                <Border.Style>
                                    <Style TargetType="Border">
                                        <!-- 預設狀態：半透明藍色 -->
                                        <Setter Property="Background">
                                            <Setter.Value>
                                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                    <GradientStop Color="#AA4A90E2" Offset="0"/>
                                                    <GradientStop Color="#CC2E5F8F" Offset="1"/>
                                                </LinearGradientBrush>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter Property="BorderBrush" Value="#FF4A90E2"/>
                                        <Setter Property="Opacity" Value="0.8"/>
                                        
                                        <!-- 當 IsActive 為 True 時的高亮樣式 -->
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsActive}" Value="True">
                                                <Setter Property="Background">
                                                    <Setter.Value>
                                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                            <GradientStop Color="#FFFF6B35" Offset="0"/>
                                                            <GradientStop Color="#FFCC4125" Offset="1"/>
                                                        </LinearGradientBrush>
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Property="BorderBrush" Value="#FFFF4500"/>
                                                <Setter Property="Opacity" Value="1.0"/>
                                                <!-- 高亮時添加陰影效果 -->
                                                <Setter Property="Effect">
                                                    <Setter.Value>
                                                        <DropShadowEffect Color="Orange" 
                                                                          BlurRadius="8" 
                                                                          ShadowDepth="2" 
                                                                          Opacity="0.6"/>
                                                    </Setter.Value>
                                                </Setter>
                                            </DataTrigger>
                                            
                                            <!-- 滑鼠懸停效果 -->
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Opacity" Value="1.0"/>
                                                <Setter Property="Effect">
                                                    <Setter.Value>
                                                        <DropShadowEffect Color="White" 
                                                                          BlurRadius="4" 
                                                                          ShadowDepth="1" 
                                                                          Opacity="0.4"/>
                                                    </Setter.Value>
                                                </Setter>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>
                            </Border>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
                </Canvas>
        
        <!-- 播放頭：固定在畫面正中間 -->
        <Rectangle Width="2" 
                       Fill="Red"
                   HorizontalAlignment="Center"
                   VerticalAlignment="Stretch"
                   Panel.ZIndex="10" />
        </Grid>
    </Grid>
</UserControl> 